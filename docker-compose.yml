version: "3.8"

services:
 file_service:
    privileged: true
    image: file_service
    container_name: file_service
    build:
      context: .
      dockerfile: ./FileService/Dockerfile
    restart: on-failure
    environment:
      FILES_PATH: ${FILES_PATH}
      FILE_SERVICE_PORT: ${FILE_SERVICE_PORT}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE}
    volumes:
      - files_vol:${FILES_PATH}
    networks:
      - network
    ports:
      - ${FILE_SERVICE_PORT}:${FILE_SERVICE_PORT}
 e_uparava_sso:
    image: e_uparava_sso
    container_name: e_uparava_sso
    build:
      context: .
      dockerfile: ./SSOService/Dockerfile
    restart: always
    ports: 
       - ${SSO_SERVICE_PORT}:${SSO_SERVICE_PORT}
    environment:
      SSO_REDIS_HOST: ${SSO_REDIS_HOST}
      SSO_REDIS_PORT: ${SSO_REDIS_PORT}
      SSO_SERVICE_PORT: ${SSO_SERVICE_PORT}
      SSO_SERVICE_HOST: ${SSO_SERVICE_HOST}
      SSO_MYSQL_PORT: ${SSO_MYSQL_PORT}
      SSO_MYSQL_HOST: ${SSO_MYSQL_HOST}
      SSO_MYSQL_ROOT_PASSWORD: ${SSO_MYSQL_ROOT_PASSWORD}
    networks:
      - network
    depends_on:
      - sso_redis
      - sso_mysql
 sso_redis:
    image: redis
    restart: on-failure
    ports:
      - ${SSO_REDIS_PORT}:6379
    command: "redis-server --save 20 1 --loglevel warning"
    volumes:
      - sso_redis_vol:/data
    networks:
      - network
 sso_mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${SSO_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: "eupravaSSO"
    volumes:
      - sso_mysql_vol:/var/lib/mysql
      - ./SSOService/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 3307:${SSO_MYSQL_PORT}
    networks:
      - network
 sso_react:
   restart: always
   container_name: sso_react
   build:
     context: ./SSOServiceFront
     dockerfile: ./Dockerfile
   networks:
     - network
   ports:
     - "3000:3000"
   volumes:
     - ./SSOServiceFront/src:/src
     - ./SSOServiceFront/public:/public
 sso_react:
   restart: always
   container_name: sso_react
   build:
     context: ./SSOServiceFront
     dockerfile: ./Dockerfile
   networks:
     - network
   ports:
     - "3000:3000"
   volumes:
     - ./SSOServiceFront/src:/src
     - ./SSOServiceFront/public:/public
 saobracjana_react:
   restart: always
   container_name: saobracjana_react
   build:
     context: ./SaobracjanaFront
     dockerfile: ./Dockerfile
   networks:
     - network
   ports:
     - "3001:3000"
   volumes:
     - ./SaobracjanaFront/src:/src
     - ./SaobracjanaFront/public:/public
  euprava_mup:
    build:
      context: .
      dockerfile: ./euprava-mup/Dockerfile
    image: euprava-mup
    container_name: euprava-mup
    restart: unless-stopped
    volumes:
      - .:/euprava-mup
    environment:
      MYSQL_DATABASE: ${MUP_DATABASE}
      MYSQL_USER: ${MUP_USER}
      MYSQL_PASSWORD: ${MUP_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MUP_ROOT_PASSWORD}
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    depends_on:
      - euprava_mup_db
    ports:
      - ${MUP_PORT}:3003
      - ${VITE_PORT}:5173
    networks:
      - network
    healthcheck:
      test: [ "CMD", "php", "-v" ]
      interval: 30s
      timeout: 10s
      retries: 5
 euprava_mup_db:
  image: mysql:8
  container_name: euprava_mup_db
  restart: unless-stopped
  tty: true
  ports:
    - ${MUP_MYSQL_PORT}:3306
  environment:
    MYSQL_DATABASE: ${MUP_DATABASE}
    MYSQL_USER: ${MUP_USER}
    MYSQL_PASSWORD: ${MUP_ROOT_PASSWORD}
    MYSQL_ROOT_PASSWORD: ${MUP_ROOT_PASSWORD}
    SERVICE_NAME: euprava_mup_database
    SERVICE_TAGS: dev
  volumes:
    - euprava_mup_vol:/var/lib/mysql/
    - ./euprava-mup/database/init.sql:/docker-entrypoint-initdb.d/init.sql
  networks:
    - network

networks:
  network:
    driver: bridge
volumes:
  files_vol:
  sso_redis_vol:
  sso_mysql_vol:
  euprava_mup_vol:
